{"level":"error","message":"Error in generateMealPlan: Failed to generate meal plan","stack":"Error: Failed to generate meal plan\n    at LLMService.generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\llmService.js:25:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:39:28)","timestamp":"2025-05-28T05:19:29.009Z"}
{"level":"error","message":"Error in generateMealPlan: Failed to generate meal plan","stack":"Error: Failed to generate meal plan\n    at LLMService.generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\llmService.js:25:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:39:28)","timestamp":"2025-05-28T05:20:09.902Z"}
{"level":"error","message":"Error in generateMealPlan: Failed to generate meal plan","stack":"Error: Failed to generate meal plan\n    at LLMService.generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\llmService.js:25:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:39:28)","timestamp":"2025-05-28T05:21:44.235Z"}
{"level":"error","message":"Error in generateMealPlan: Failed to generate meal plan","stack":"Error: Failed to generate meal plan\n    at LLMService.generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\llmService.js:42:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:39:28)","timestamp":"2025-05-28T05:37:12.373Z"}
{"level":"error","message":"Error in generateMealPlan: Failed to generate meal plan","stack":"Error: Failed to generate meal plan\n    at LLMService.generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\llmService.js:42:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:39:28)","timestamp":"2025-05-28T05:38:59.562Z"}
{"level":"error","message":"Error in generateMealPlan: Failed to generate meal plan","stack":"Error: Failed to generate meal plan\n    at LLMService.generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\llmService.js:42:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:49:28)","timestamp":"2025-05-28T05:43:21.510Z"}
{"level":"error","message":"Error getting nutrition data for breakfast: meal.ingredients.join is not a function","stack":"TypeError: meal.ingredients.join is not a function\n    at generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:60:54)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-05-28T05:50:52.533Z"}
{"level":"error","message":"Error getting nutrition data for breakfast: Failed to get nutrition data from FatSecret API","stack":"Error: Failed to get nutrition data from FatSecret API\n    at FatSecretService.getNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\fatsecretService.js:122:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:67:35)","timestamp":"2025-05-28T05:57:23.618Z"}
{"level":"error","message":"Error getting nutrition data for lunch: Failed to get nutrition data from FatSecret API","stack":"Error: Failed to get nutrition data from FatSecret API\n    at FatSecretService.getNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\fatsecretService.js:122:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:67:35)","timestamp":"2025-05-28T05:57:23.945Z"}
{"level":"error","message":"Error getting nutrition data for dinner: Failed to get nutrition data from FatSecret API","stack":"Error: Failed to get nutrition data from FatSecret API\n    at FatSecretService.getNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\fatsecretService.js:122:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:67:35)","timestamp":"2025-05-28T05:57:24.267Z"}
{"level":"error","message":"Error getting nutrition data for snack: Failed to get nutrition data from FatSecret API","stack":"Error: Failed to get nutrition data from FatSecret API\n    at FatSecretService.getNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\fatsecretService.js:122:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:67:35)","timestamp":"2025-05-28T05:57:24.590Z"}
{"level":"error","message":"Error getting nutrition data for breakfast: Failed to get nutrition data from FatSecret API","stack":"Error: Failed to get nutrition data from FatSecret API\n    at FatSecretService.getNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\fatsecretService.js:122:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:67:35)","timestamp":"2025-05-28T05:57:24.948Z"}
{"level":"error","message":"Error getting nutrition data for lunch: Failed to get nutrition data from FatSecret API","stack":"Error: Failed to get nutrition data from FatSecret API\n    at FatSecretService.getNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\fatsecretService.js:122:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:67:35)","timestamp":"2025-05-28T05:57:25.294Z"}
{"level":"error","message":"Error getting nutrition data for dinner: Failed to get nutrition data from FatSecret API","stack":"Error: Failed to get nutrition data from FatSecret API\n    at FatSecretService.getNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\fatsecretService.js:122:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:67:35)","timestamp":"2025-05-28T05:57:25.619Z"}
{"level":"error","message":"Error getting nutrition data for snack: Failed to get nutrition data from FatSecret API","stack":"Error: Failed to get nutrition data from FatSecret API\n    at FatSecretService.getNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\fatsecretService.js:122:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:67:35)","timestamp":"2025-05-28T05:57:25.953Z"}
{"level":"error","message":"Error getting nutrition data for breakfast: Failed to get nutrition data from FatSecret API","stack":"Error: Failed to get nutrition data from FatSecret API\n    at FatSecretService.getNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\fatsecretService.js:122:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:67:35)","timestamp":"2025-05-28T05:57:26.285Z"}
{"level":"error","message":"Error getting nutrition data for lunch: Failed to get nutrition data from FatSecret API","stack":"Error: Failed to get nutrition data from FatSecret API\n    at FatSecretService.getNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\fatsecretService.js:122:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:67:35)","timestamp":"2025-05-28T05:57:26.610Z"}
{"level":"error","message":"Error getting nutrition data for dinner: Failed to get nutrition data from FatSecret API","stack":"Error: Failed to get nutrition data from FatSecret API\n    at FatSecretService.getNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\fatsecretService.js:122:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:67:35)","timestamp":"2025-05-28T05:57:26.940Z"}
{"level":"error","message":"Error getting nutrition data for snack: Failed to get nutrition data from FatSecret API","stack":"Error: Failed to get nutrition data from FatSecret API\n    at FatSecretService.getNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\fatsecretService.js:122:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:67:35)","timestamp":"2025-05-28T05:57:27.256Z"}
{"level":"error","message":"Error saving to local storage: localStorage is not defined","stack":"ReferenceError: localStorage is not defined\n    at DummyDataService.saveToLocalStorage (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\dummyDataService.js:112:7)\n    at generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:130:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-05-28T05:57:27.260Z"}
{"level":"error","message":"Error in generateMealPlan: Failed to generate meal plan","stack":"Error: Failed to generate meal plan\n    at LLMService.generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\services\\llmService.js:42:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async generateMealPlan (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\controllers\\mealPlanController.js:49:28)","timestamp":"2025-05-28T06:54:26.538Z"}
{"level":"error","message":"Unable to connect to the database: password authentication failed for user 'neondb_owner'","name":"SequelizeConnectionError","original":{"code":"XX000","length":75,"name":"error","severity":"ERROR"},"parent":{"code":"XX000","length":75,"name":"error","severity":"ERROR"},"stack":"SequelizeConnectionError: password authentication failed for user 'neondb_owner'\n    at Client._connectionCallback (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg\\lib\\client.js:336:19)\n    at Client._handleErrorMessage (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg\\lib\\client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg\\lib\\connection.js:116:12\n    at Parser.parse (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg-protocol\\dist\\parser.js:36:17)\n    at TLSSocket.<anonymous> (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg-protocol\\dist\\index.js:11:42)\n    at TLSSocket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)","timestamp":"2025-05-28T15:08:27.393Z"}
{"level":"error","message":"Failed to sync database: password authentication failed for user 'neondb_owner'","name":"SequelizeConnectionError","original":{"code":"XX000","length":75,"name":"error","severity":"ERROR"},"parent":{"code":"XX000","length":75,"name":"error","severity":"ERROR"},"stack":"SequelizeConnectionError: password authentication failed for user 'neondb_owner'\n    at Client._connectionCallback (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg\\lib\\client.js:336:19)\n    at Client._handleErrorMessage (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg\\lib\\client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg\\lib\\connection.js:116:12\n    at Parser.parse (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg-protocol\\dist\\parser.js:36:17)\n    at TLSSocket.<anonymous> (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg-protocol\\dist\\index.js:11:42)\n    at TLSSocket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)","timestamp":"2025-05-28T15:08:27.394Z"}
{"level":"error","message":"Failed to sync database: relation \"users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async MealPlan.sync (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\app.js:16:5","timestamp":"2025-05-28T15:16:14.048Z"}
{"level":"error","message":"Failed to sync database: relation \"users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async MealPlan.sync (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\app.js:16:5","timestamp":"2025-05-28T15:16:42.020Z"}
{"level":"error","message":"Failed to sync database: relation \"users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async MealPlan.sync (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\app.js:16:5","timestamp":"2025-05-28T15:16:59.270Z"}
{"level":"error","message":"Failed to sync database: relation \"users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async MealPlan.sync (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\app.js:16:5","timestamp":"2025-05-28T15:17:02.902Z"}
{"level":"error","message":"Failed to sync database: relation \"users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"MealPlans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_MealPlans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE, \"updatedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async MealPlan.sync (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\app.js:16:5","timestamp":"2025-05-28T15:17:14.189Z"}
{"level":"error","message":"Failed to sync database: relation \"users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"meal_plans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_meal_plans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"meal_plans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_meal_plans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"meal_plans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_meal_plans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async MealPlan.sync (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\app.js:16:5","timestamp":"2025-05-28T15:17:27.262Z"}
{"level":"error","message":"Failed to sync database: relation \"users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"meal_plans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_meal_plans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"meal_plans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_meal_plans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"meal_plans\" (\"id\" UUID , \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\"), \"planData\" JSONB NOT NULL, \"startDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"endDate\" TIMESTAMP WITH TIME ZONE NOT NULL, \"status\" \"public\".\"enum_meal_plans_status\" DEFAULT 'active', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async MealPlan.sync (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\app.js:16:5","timestamp":"2025-05-28T15:32:33.932Z"}
2025-05-28 21:54:54 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:54 error: Error getting nutrition data: {"food":"3 eggs","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:54 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:54 error: Error getting nutrition data: {"food":"100g spinach","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:55 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:55 error: Error getting nutrition data: {"food":"100g cherry tomatoes","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:55 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:55 error: Error getting nutrition data: {"food":"1 slice whole grain bread","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:55 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:55 error: Error getting nutrition data: {"food":"1 tbsp olive oil","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:56 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:56 error: Error getting nutrition data: {"food":"200g lentils","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:56 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:56 error: Error getting nutrition data: {"food":"100g tomato","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:56 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:56 error: Error getting nutrition data: {"food":"100g onion","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:57 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:57 error: Error getting nutrition data: {"food":"1 tbsp olive oil","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:57 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:57 error: Error getting nutrition data: {"food":"1 slice whole grain bread","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:57 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:57 error: Error getting nutrition data: {"food":"200g chicken breast","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:58 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:58 error: Error getting nutrition data: {"food":"100g quinoa","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:58 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:58 error: Error getting nutrition data: {"food":"150g mixed vegetables (broccoli","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:58 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:58 error: Error getting nutrition data: {"food":"zucchini","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:59 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:59 error: Error getting nutrition data: {"food":"bell peppers)","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:59 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:59 error: Error getting nutrition data: {"food":"1 tbsp olive oil","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:54:59 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:54:59 error: Error getting nutrition data: {"food":"2 tbsp hummus","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:00 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:00 error: Error getting nutrition data: {"food":"100g carrots","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:00 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:00 error: Error getting nutrition data: {"food":"200g non-fat Greek yogurt","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:00 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:00 error: Error getting nutrition data: {"food":"100g mixed berries","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:01 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:01 error: Error getting nutrition data: {"food":"10g almonds","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:01 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:01 error: Error getting nutrition data: {"food":"2 tsp honey","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:01 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:01 error: Error getting nutrition data: {"food":"150g canned tuna (in water)","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:02 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:02 error: Error getting nutrition data: {"food":"100g mixed greens","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:02 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:02 error: Error getting nutrition data: {"food":"100g cucumber","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:02 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:02 error: Error getting nutrition data: {"food":"20g olives","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:03 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:03 error: Error getting nutrition data: {"food":"1 tbsp olive oil","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:03 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:03 error: Error getting nutrition data: {"food":"150g salmon","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:03 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:03 error: Error getting nutrition data: {"food":"100g quinoa","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:04 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:04 error: Error getting nutrition data: {"food":"150g roasted asparagus and bell peppers","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:04 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:04 error: Error getting nutrition data: {"food":"1 tbsp olive oil","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:04 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:04 error: Error getting nutrition data: {"food":"1 banana","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:05 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:05 error: Error getting nutrition data: {"food":"1 cup almond milk","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:05 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:05 error: Error getting nutrition data: {"food":"1 scoop whey protein","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:05 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:05 error: Error getting nutrition data: {"food":"1 cup spinach","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:06 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:06 error: Error getting nutrition data: {"food":"1 slice whole grain bread","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:06 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:06 error: Error getting nutrition data: {"food":"1/2 avocado","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:06 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:06 error: Error getting nutrition data: {"food":"100g cherry tomatoes","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:07 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:07 error: Error getting nutrition data: {"food":"1 tbsp olive oil","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:07 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:07 error: Error getting nutrition data: {"food":"100g quinoa","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:07 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:07 error: Error getting nutrition data: {"food":"150g chickpeas","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:08 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:08 error: Error getting nutrition data: {"food":"100g cucumber","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:08 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:08 error: Error getting nutrition data: {"food":"50g feta cheese","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:08 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:08 error: Error getting nutrition data: {"food":"1 tbsp olive oil","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:09 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:09 error: Error getting nutrition data: {"food":"2 bell peppers","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:09 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:09 error: Error getting nutrition data: {"food":"150g ground turkey (avoid pork)","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:09 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:09 error: Error getting nutrition data: {"food":"100g brown rice","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:10 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:10 error: Error getting nutrition data: {"food":"100g black beans","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:10 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:10 error: Error getting nutrition data: {"food":"1 tbsp olive oil","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:10 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:10 error: Error getting nutrition data: {"food":"30g almonds","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:55:11 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_scope"}}
2025-05-28 21:55:11 error: Error getting nutrition data: {"food":"20g walnuts","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:59:12 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_client"}}
2025-05-28 21:59:12 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Failed to authenticate with FatSecret API"}
2025-05-28 21:59:12 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 21:59:12 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:01:23 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_client"}}
2025-05-28 22:01:23 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Failed to authenticate with FatSecret API"}
2025-05-28 22:01:23 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:01:23 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:01:42 error: Error getting FatSecret access token: {"error":"Cannot read properties of undefined (reading 'join')"}
2025-05-28 22:01:42 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Failed to authenticate with FatSecret API"}
2025-05-28 22:01:42 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:01:42 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:03:09 error: Error getting FatSecret access token: {"error":"Cannot read properties of undefined (reading 'join')"}
2025-05-28 22:03:09 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Failed to authenticate with FatSecret API"}
2025-05-28 22:03:09 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:03:09 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:03:16 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_client"}}
2025-05-28 22:03:16 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Failed to authenticate with FatSecret API"}
2025-05-28 22:03:16 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:03:16 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:03:36 error: Error getting FatSecret access token: {"error":"Request failed with status code 400","status":400,"data":{"error":"invalid_client"}}
2025-05-28 22:03:36 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Failed to authenticate with FatSecret API"}
2025-05-28 22:03:36 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:03:36 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:06:52 error: Error getting FatSecret access token: Request failed with status code 400 {"status":400,"data":{"error":"invalid_scope"},"clientIdPrefix":"f6fc..."}
2025-05-28 22:06:52 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Failed to authenticate with FatSecret API"}
2025-05-28 22:06:52 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:06:52 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:07:17 error: Error getting FatSecret access token: Request failed with status code 400 {"status":400,"data":{"error":"invalid_scope"},"clientIdPrefix":"f6fc..."}
2025-05-28 22:07:17 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Failed to authenticate with FatSecret API"}
2025-05-28 22:07:17 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:07:17 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:07:27 error: Error getting FatSecret access token: Request failed with status code 400 {"status":400,"data":{"error":"invalid_scope"},"clientIdPrefix":"f6fc..."}
2025-05-28 22:07:27 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Failed to authenticate with FatSecret API"}
2025-05-28 22:07:27 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:07:27 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:07:32 error: Error getting FatSecret access token: Request failed with status code 400 {"status":400,"data":{"error":"invalid_scope"},"clientIdPrefix":"f6fc..."}
2025-05-28 22:07:32 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Failed to authenticate with FatSecret API"}
2025-05-28 22:07:32 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:07:32 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:07:45 error: Error getting FatSecret access token: Request failed with status code 400 {"status":400,"data":{"error":"invalid_scope"},"clientIdPrefix":"f6fc..."}
2025-05-28 22:07:45 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Failed to authenticate with FatSecret API"}
2025-05-28 22:07:45 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:07:45 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:08:24 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:08:24 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:09:56 error: Error getting FatSecret access token: Request failed with status code 400 {"status":400,"data":{"error":"invalid_scope"},"clientIdPrefix":"f6fc..."}
2025-05-28 22:09:56 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Failed to authenticate with FatSecret API"}
2025-05-28 22:09:56 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:09:56 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:10:41 error: Error getting FatSecret access token: Request failed with status code 400 {"status":400,"data":{"error":"invalid_scope"},"clientIdPrefix":"f6fc..."}
2025-05-28 22:10:41 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Failed to authenticate with FatSecret API"}
2025-05-28 22:10:41 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:10:41 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:10:46 error: Invalid FatSecret scope: Request failed with status code 400 {"status":400,"data":{"error":"invalid_scope"},"clientIdPrefix":"f6fc..."}
2025-05-28 22:10:46 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Invalid FatSecret scope. Please check the API documentation for correct scope format."}
2025-05-28 22:10:46 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:10:46 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-28 22:35:48 error: Invalid FatSecret scope: Request failed with status code 400 {"status":400,"data":{"error":"invalid_scope"},"clientIdPrefix":"f6fc..."}
2025-05-28 22:35:48 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Invalid FatSecret scope. Please check the API documentation for correct scope format."}
2025-05-28 22:35:48 error: FatSecret API verification failed: No nutrition data received 
2025-05-28 22:35:48 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-30 19:21:00 error: Invalid FatSecret scope: Request failed with status code 400 {"status":400,"data":{"error":"invalid_scope"},"clientIdPrefix":"f6fc..."}
2025-05-30 19:21:00 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Invalid FatSecret scope. Please check the API documentation for correct scope format."}
2025-05-30 19:21:00 error: FatSecret API verification failed: No nutrition data received 
2025-05-30 19:21:00 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-30 19:28:37 error: Invalid FatSecret scope: Request failed with status code 400 {"status":400,"data":{"error":"invalid_scope"},"clientIdPrefix":"f6fc..."}
2025-05-30 19:28:37 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Invalid FatSecret scope. Please check the API documentation for correct scope format."}
2025-05-30 19:28:37 error: FatSecret API verification failed: No nutrition data received 
2025-05-30 19:28:37 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-30 19:28:55 error: FatSecret API verification failed: No nutrition data received 
2025-05-30 19:28:55 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-31 12:40:19 error: Initialization error: getaddrinfo ENOTFOUND ep-purple-sun-a1pl2mcg-pooler.ap-southeast-1.aws.neon.tech {"name":"SequelizeHostNotFoundError","parent":{"errno":-3008,"code":"ENOTFOUND","syscall":"getaddrinfo","hostname":"ep-purple-sun-a1pl2mcg-pooler.ap-southeast-1.aws.neon.tech"},"original":{"errno":-3008,"code":"ENOTFOUND","syscall":"getaddrinfo","hostname":"ep-purple-sun-a1pl2mcg-pooler.ap-southeast-1.aws.neon.tech"},"stack":"SequelizeHostNotFoundError: getaddrinfo ENOTFOUND ep-purple-sun-a1pl2mcg-pooler.ap-southeast-1.aws.neon.tech\n    at Client._connectionCallback (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\connection-manager.js:136:24)\n    at Client._handleErrorWhileConnecting (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg\\lib\\client.js:336:19)\n    at Client._handleErrorEvent (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg\\lib\\client.js:346:19)\n    at Connection.emit (node:events:518:28)\n    at Socket.reportStreamError (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg\\lib\\connection.js:57:12)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:169:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:128:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)"}
2025-05-31 12:40:55 error: FatSecret API verification failed: No nutrition data received 
2025-05-31 12:40:55 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-31 12:41:55 error: Initialization error: getaddrinfo ENOTFOUND ep-purple-sun-a1pl2mcg-pooler.ap-southeast-1.aws.neon.tech {"name":"SequelizeHostNotFoundError","parent":{"errno":-3008,"code":"ENOTFOUND","syscall":"getaddrinfo","hostname":"ep-purple-sun-a1pl2mcg-pooler.ap-southeast-1.aws.neon.tech"},"original":{"errno":-3008,"code":"ENOTFOUND","syscall":"getaddrinfo","hostname":"ep-purple-sun-a1pl2mcg-pooler.ap-southeast-1.aws.neon.tech"},"stack":"SequelizeHostNotFoundError: getaddrinfo ENOTFOUND ep-purple-sun-a1pl2mcg-pooler.ap-southeast-1.aws.neon.tech\n    at Client._connectionCallback (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\connection-manager.js:136:24)\n    at Client._handleErrorWhileConnecting (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg\\lib\\client.js:336:19)\n    at Client._handleErrorEvent (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg\\lib\\client.js:346:19)\n    at Connection.emit (node:events:518:28)\n    at Socket.reportStreamError (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\node_modules\\pg\\lib\\connection.js:57:12)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:169:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:128:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)"}
2025-05-31 12:42:17 error: Invalid FatSecret scope: Request failed with status code 400 {"status":400,"data":{"error":"invalid_scope"},"clientIdPrefix":"f6fc..."}
2025-05-31 12:42:17 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Invalid FatSecret scope. Please check the API documentation for correct scope format."}
2025-05-31 12:42:17 error: FatSecret API verification failed: No nutrition data received 
2025-05-31 12:42:17 error: FatSecret API verification failed. Some features may not work correctly. 
2025-05-31 12:46:45 error: Invalid FatSecret scope: Request failed with status code 400 {"status":400,"data":{"error":"invalid_scope"},"clientIdPrefix":"f6fc..."}
2025-05-31 12:46:45 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Invalid FatSecret scope. Please check the API documentation for correct scope format."}
2025-05-31 12:46:45 error: FatSecret API verification failed: No nutrition data received 
2025-05-31 12:46:45 error: FatSecret API verification failed. Some features may not work correctly. 
2025-06-02 13:16:14 error: Invalid FatSecret scope: Request failed with status code 400 {"status":400,"data":{"error":"invalid_scope"},"clientIdPrefix":"f6fc..."}
2025-06-02 13:16:14 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"Invalid FatSecret scope. Please check the API documentation for correct scope format."}
2025-06-02 13:16:14 error: FatSecret API verification failed: No nutrition data received 
2025-06-02 13:16:14 error: FatSecret API verification failed. Some features may not work correctly. 
2025-06-02 13:16:35 error: FatSecret API verification failed: No nutrition data received 
2025-06-02 13:16:35 error: FatSecret API verification failed. Some features may not work correctly. 
2025-06-02 13:22:07 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:22:07 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:22:07 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:22:08 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:22:08 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:22:08 error: FatSecret API verification failed: No nutrition data received 
2025-06-02 13:22:08 error: FatSecret API verification failed. Some features may not work correctly. 
2025-06-02 13:23:47 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:23:47 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:23:47 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:23:48 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:23:48 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:23:48 error: FatSecret API verification failed: No nutrition data received 
2025-06-02 13:23:48 error: FatSecret API verification failed. Some features may not work correctly. 
2025-06-02 13:26:04 error: Failed to fix JSON: {"error":"Unexpected end of JSON input"}
2025-06-02 13:31:43 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:31:43 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:31:43 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:31:44 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:31:44 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:31:44 error: FatSecret API verification failed: No nutrition data received 
2025-06-02 13:31:44 error: FatSecret API verification failed. Some features may not work correctly. 
2025-06-02 13:33:46 error: Failed to fix JSON: {"error":"Unexpected end of JSON input","position":"unknown","context":"unknown"}
2025-06-02 13:38:43 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:38:43 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:38:44 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:38:44 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:38:44 error: FatSecret API returned an error: {"error":{"code":21,"message":"Invalid IP address detected:  '110.224.94.142'"}}
2025-06-02 13:38:44 error: FatSecret API verification failed: No nutrition data received 
2025-06-02 13:38:44 error: FatSecret API verification failed. Some features may not work correctly. 
2025-06-02 17:55:09 error: Error getting meal nutrition data: {"meal":"Grilled Chicken Salad","error":"this.extractIngredientsFromMeal is not a function"}
2025-06-02 17:55:09 error: FatSecret API verification failed: No nutrition data received 
2025-06-02 17:55:09 error: FatSecret API verification failed. Some features may not work correctly. 
2025-06-03 10:31:26 ERROR Error retrieving data:
{
  "error": "relation \"nutrition_data\" does not exist",
  "stack": "Error\n    at Query.run (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:407:12)\n    at async Nutrition.findAll (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:1140:21)\n    at async Nutrition.findOne (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:1240:12)\n    at async NutritionCache.get (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:104:28)\n    at async NutritionCache.getBatchNutrition (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:213:36)\n    at async FatSecretService.getMealNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:274:41)\n    at async FatSecretService.verifyConnection (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:64:35)",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:31:26 ERROR Error processing ingredient:
{
  "ingredient": "chicken breast",
  "error": "Failed to retrieve nutrition data",
  "stack": "Error: Failed to retrieve nutrition data\n    at NutritionCache.get (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:132:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async NutritionCache.getBatchNutrition (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:213:36)\n    at async FatSecretService.getMealNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:274:41)\n    at async FatSecretService.verifyConnection (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:64:35)\n    at async C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\app.js:37:35"
}
2025-06-03 10:31:26 ERROR Error retrieving data:
{
  "error": "relation \"nutrition_data\" does not exist",
  "stack": "Error\n    at Query.run (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:407:12)\n    at async Nutrition.findAll (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:1140:21)\n    at async Nutrition.findOne (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:1240:12)\n    at async NutritionCache.get (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:104:28)\n    at async NutritionCache.getBatchNutrition (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:213:36)\n    at async FatSecretService.getMealNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:274:41)\n    at async FatSecretService.verifyConnection (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:64:35)",
  "key": "meal-generatornutrition:mixed greens"
}
2025-06-03 10:31:26 ERROR Error processing ingredient:
{
  "ingredient": "mixed greens",
  "error": "Failed to retrieve nutrition data",
  "stack": "Error: Failed to retrieve nutrition data\n    at NutritionCache.get (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:132:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async NutritionCache.getBatchNutrition (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:213:36)\n    at async FatSecretService.getMealNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:274:41)\n    at async FatSecretService.verifyConnection (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:64:35)\n    at async C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\app.js:37:35"
}
2025-06-03 10:31:26 ERROR Error retrieving data:
{
  "error": "relation \"nutrition_data\" does not exist",
  "stack": "Error\n    at Query.run (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:407:12)\n    at async Nutrition.findAll (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:1140:21)\n    at async Nutrition.findOne (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:1240:12)\n    at async NutritionCache.get (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:104:28)\n    at async NutritionCache.getBatchNutrition (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:213:36)\n    at async FatSecretService.getMealNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:274:41)\n    at async FatSecretService.verifyConnection (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:64:35)",
  "key": "meal-generatornutrition:cherry tomatoes"
}
2025-06-03 10:31:26 ERROR Error processing ingredient:
{
  "ingredient": "cherry tomatoes",
  "error": "Failed to retrieve nutrition data",
  "stack": "Error: Failed to retrieve nutrition data\n    at NutritionCache.get (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:132:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async NutritionCache.getBatchNutrition (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:213:36)\n    at async FatSecretService.getMealNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:274:41)\n    at async FatSecretService.verifyConnection (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:64:35)\n    at async C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\app.js:37:35"
}
2025-06-03 10:31:27 ERROR Error retrieving data:
{
  "error": "relation \"nutrition_data\" does not exist",
  "stack": "Error\n    at Query.run (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:407:12)\n    at async Nutrition.findAll (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:1140:21)\n    at async Nutrition.findOne (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:1240:12)\n    at async NutritionCache.get (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:104:28)\n    at async NutritionCache.getBatchNutrition (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:213:36)\n    at async FatSecretService.getMealNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:274:41)\n    at async FatSecretService.verifyConnection (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:64:35)",
  "key": "meal-generatornutrition:cucumber"
}
2025-06-03 10:31:27 ERROR Error processing ingredient:
{
  "ingredient": "cucumber",
  "error": "Failed to retrieve nutrition data",
  "stack": "Error: Failed to retrieve nutrition data\n    at NutritionCache.get (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:132:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async NutritionCache.getBatchNutrition (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:213:36)\n    at async FatSecretService.getMealNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:274:41)\n    at async FatSecretService.verifyConnection (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:64:35)\n    at async C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\app.js:37:35"
}
2025-06-03 10:31:27 ERROR Error retrieving data:
{
  "error": "relation \"nutrition_data\" does not exist",
  "stack": "Error\n    at Query.run (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:407:12)\n    at async Nutrition.findAll (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:1140:21)\n    at async Nutrition.findOne (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\node_modules\\sequelize\\lib\\model.js:1240:12)\n    at async NutritionCache.get (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:104:28)\n    at async NutritionCache.getBatchNutrition (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:213:36)\n    at async FatSecretService.getMealNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:274:41)\n    at async FatSecretService.verifyConnection (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:64:35)",
  "key": "meal-generatornutrition:olive oil"
}
2025-06-03 10:31:27 ERROR Error processing ingredient:
{
  "ingredient": "olive oil",
  "error": "Failed to retrieve nutrition data",
  "stack": "Error: Failed to retrieve nutrition data\n    at NutritionCache.get (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:132:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async NutritionCache.getBatchNutrition (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\utils\\nutritionCache.js:213:36)\n    at async FatSecretService.getMealNutritionData (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:274:41)\n    at async FatSecretService.verifyConnection (C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\services\\fatsecretService.js:64:35)\n    at async C:\\Users\\Harish Karthick S\\Documents\\Kalvium\\Semester-4\\Startup\\Di-Twin\\Meal-Generator\\Meal-Generator\\app.js:37:35"
}
2025-06-03 10:31:27 ERROR FatSecret API verification failed:
{
  "error": "Cannot read properties of undefined (reading 'calories')"
}
2025-06-03 10:31:27 ERROR FatSecret API verification failed. Some features may not work correctly.
2025-06-03 10:32:03 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:32:03 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:mixed greens"
}
2025-06-03 10:32:03 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cherry tomatoes"
}
2025-06-03 10:32:03 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cucumber"
}
2025-06-03 10:32:03 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:olive oil"
}
2025-06-03 10:32:07 [31merror[39m [31mError storing data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:32:07 [31merror[39m [31mError in getMealNutritionData:[39m
{
  "service": "meal-generator",
  "meal": "Grilled Chicken Salad",
  "error": "relation \"nutrition_data\" does not exist"
}
2025-06-03 10:32:07 [31merror[39m [31mFatSecret API verification failed:[39m
{
  "error": "Cannot read properties of undefined (reading 'calories')"
}
2025-06-03 10:32:07 [31merror[39m [31mFatSecret API verification failed. Some features may not work correctly.[39m
2025-06-03 10:33:02 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:33:02 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:mixed greens"
}
2025-06-03 10:33:02 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cherry tomatoes"
}
2025-06-03 10:33:02 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cucumber"
}
2025-06-03 10:33:02 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:olive oil"
}
2025-06-03 10:33:06 [31merror[39m [31mError storing data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:33:06 [31merror[39m [31mError in getMealNutritionData:[39m
{
  "service": "meal-generator",
  "meal": "Grilled Chicken Salad",
  "error": "relation \"nutrition_data\" does not exist"
}
2025-06-03 10:33:06 [31merror[39m [31mFatSecret API verification failed:[39m
{
  "error": "Cannot read properties of undefined (reading 'calories')"
}
2025-06-03 10:33:06 [31merror[39m [31mFatSecret API verification failed. Some features may not work correctly.[39m
2025-06-03 10:35:49 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:35:49 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:mixed greens"
}
2025-06-03 10:35:49 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cherry tomatoes"
}
2025-06-03 10:35:49 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cucumber"
}
2025-06-03 10:35:49 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:olive oil"
}
2025-06-03 10:35:53 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:35:53 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:mixed greens"
}
2025-06-03 10:35:53 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cherry tomatoes"
}
2025-06-03 10:35:53 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cucumber"
}
2025-06-03 10:35:53 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:olive oil"
}
2025-06-03 10:35:56 [31merror[39m [31mError storing data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:35:56 [31merror[39m [31mError in getMealNutritionData:[39m
{
  "service": "meal-generator",
  "meal": "Grilled Chicken Salad",
  "error": "relation \"nutrition_data\" does not exist"
}
2025-06-03 10:35:56 [31merror[39m [31mFatSecret API verification failed:[39m
{
  "error": "Cannot read properties of undefined (reading 'calories')"
}
2025-06-03 10:35:56 [31merror[39m [31mFatSecret API verification failed. Some features may not work correctly.[39m
2025-06-03 10:36:19 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:36:19 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:mixed greens"
}
2025-06-03 10:36:19 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cherry tomatoes"
}
2025-06-03 10:36:19 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cucumber"
}
2025-06-03 10:36:19 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:olive oil"
}
2025-06-03 10:43:02 [31merror[39m [31mFailed to verify Nutritionix API connection:[39m
{
  "service": "meal-generator",
  "error": "Request failed with status code 401",
  "status": 401
}
2025-06-03 10:43:03 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:apple"
}
2025-06-03 10:43:03 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:43:03 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:mixed greens"
}
2025-06-03 10:43:30 [31merror[39m [31mFailed to verify Nutritionix API connection:[39m
{
  "service": "meal-generator",
  "error": "Request failed with status code 401",
  "status": 401
}
2025-06-03 10:43:30 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:apple"
}
2025-06-03 10:43:30 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:43:30 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:mixed greens"
}
2025-06-03 10:43:31 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cherry tomatoes"
}
2025-06-03 10:43:31 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cucumber"
}
2025-06-03 10:43:31 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:olive oil"
}
2025-06-03 10:43:34 [31merror[39m [31mError storing data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:apple"
}
2025-06-03 10:43:34 [31merror[39m [31mError in getMealNutritionData:[39m
{
  "service": "meal-generator",
  "meal": "apple",
  "error": "relation \"nutrition_data\" does not exist"
}
2025-06-03 10:43:34 [31merror[39m [31mBoth Nutritionix and FatSecret API connections failed:[39m
{
  "service": "meal-generator",
  "nutritionixError": "Request failed with status code 401",
  "fatSecretError": "FatSecret API test returned no data"
}
2025-06-03 10:43:34 [31merror[39m [31mFailed to verify Nutritionix API connection:[39m
{
  "service": "meal-generator",
  "error": "All nutrition API services are unavailable"
}
2025-06-03 10:43:34 [31merror[39m [31mError storing data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:43:34 [31merror[39m [31mError in getMealNutritionData:[39m
{
  "service": "meal-generator",
  "meal": "Grilled Chicken Salad",
  "error": "relation \"nutrition_data\" does not exist"
}
2025-06-03 10:43:34 [31merror[39m [31mFatSecret API verification failed:[39m
{
  "error": "Cannot read properties of undefined (reading 'calories')"
}
2025-06-03 10:43:34 [31merror[39m [31mFatSecret API verification failed. Some features may not work correctly.[39m
2025-06-03 10:43:54 [31merror[39m [31mFailed to verify Nutritionix API connection:[39m
{
  "service": "meal-generator",
  "error": "Request failed with status code 401",
  "status": 401
}
2025-06-03 10:43:55 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:apple"
}
2025-06-03 10:43:55 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:43:55 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:mixed greens"
}
2025-06-03 10:43:55 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cherry tomatoes"
}
2025-06-03 10:43:55 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cucumber"
}
2025-06-03 10:43:55 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:olive oil"
}
2025-06-03 10:43:58 [31merror[39m [31mError storing data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:apple"
}
2025-06-03 10:43:58 [31merror[39m [31mError in getMealNutritionData:[39m
{
  "service": "meal-generator",
  "meal": "apple",
  "error": "relation \"nutrition_data\" does not exist"
}
2025-06-03 10:43:58 [31merror[39m [31mBoth Nutritionix and FatSecret API connections failed:[39m
{
  "service": "meal-generator",
  "nutritionixError": "Request failed with status code 401",
  "fatSecretError": "FatSecret API test returned no data"
}
2025-06-03 10:43:58 [31merror[39m [31mFailed to verify Nutritionix API connection:[39m
{
  "service": "meal-generator",
  "error": "All nutrition API services are unavailable"
}
2025-06-03 10:43:59 [31merror[39m [31mError storing data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:43:59 [31merror[39m [31mError in getMealNutritionData:[39m
{
  "service": "meal-generator",
  "meal": "Grilled Chicken Salad",
  "error": "relation \"nutrition_data\" does not exist"
}
2025-06-03 10:43:59 [31merror[39m [31mFatSecret API verification failed:[39m
{
  "error": "Cannot read properties of undefined (reading 'calories')"
}
2025-06-03 10:43:59 [31merror[39m [31mFatSecret API verification failed. Some features may not work correctly.[39m
2025-06-03 10:44:42 [31merror[39m [31mFailed to verify Nutritionix API connection:[39m
{
  "service": "meal-generator",
  "error": "Request failed with status code 401",
  "status": 401
}
2025-06-03 10:44:43 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:apple"
}
2025-06-03 10:44:43 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:44:43 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:mixed greens"
}
2025-06-03 10:44:43 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cherry tomatoes"
}
2025-06-03 10:44:44 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:cucumber"
}
2025-06-03 10:44:44 [31merror[39m [31mError retrieving data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:olive oil"
}
2025-06-03 10:44:47 [31merror[39m [31mError storing data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:apple"
}
2025-06-03 10:44:47 [31merror[39m [31mError in getMealNutritionData:[39m
{
  "service": "meal-generator",
  "meal": "apple",
  "error": "relation \"nutrition_data\" does not exist"
}
2025-06-03 10:44:47 [31merror[39m [31mBoth Nutritionix and FatSecret API connections failed:[39m
{
  "service": "meal-generator",
  "nutritionixError": "Request failed with status code 401",
  "fatSecretError": "FatSecret API test returned no data"
}
2025-06-03 10:44:47 [31merror[39m [31mFailed to verify Nutritionix API connection:[39m
{
  "service": "meal-generator",
  "error": "All nutrition API services are unavailable"
}
2025-06-03 10:44:47 [31merror[39m [31mError storing data:[39m
{
  "error": "relation \"nutrition_data\" does not exist",
  "key": "meal-generatornutrition:chicken breast"
}
2025-06-03 10:44:47 [31merror[39m [31mError in getMealNutritionData:[39m
{
  "service": "meal-generator",
  "meal": "Grilled Chicken Salad",
  "error": "relation \"nutrition_data\" does not exist"
}
2025-06-03 10:44:47 [31merror[39m [31mFatSecret API verification failed: No nutrition data received[39m
2025-06-03 10:44:47 [31merror[39m [31mFatSecret API verification failed. Some features may not work correctly.[39m
2025-06-03 10:45:23 [31merror[39m [31mFailed to verify Nutritionix API connection:[39m
{
  "service": "meal-generator",
  "error": "Request failed with status code 401",
  "status": 401
}
2025-06-03 11:00:16 [31merror[39m [31mFailed to verify Nutritionix API connection:[39m
{
  "service": "meal-generator",
  "error": "Request failed with status code 401",
  "status": 401
}
